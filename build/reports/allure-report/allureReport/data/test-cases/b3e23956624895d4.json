{
  "uid" : "b3e23956624895d4",
  "name" : "Duck flight with correct(existing) id and wingsState=FIXED",
  "fullName" : "autotests.duckActionController.FlyDuck.FixedWingsFly",
  "historyId" : "84f1d8b689f461234e46a5b0a4d4e03e",
  "time" : {
    "start" : 1738140842102,
    "stop" : 1738140842171,
    "duration" : 69
  },
  "status" : "broken",
  "statusMessage" : "Failed to validate JSON text:\r\n{\"message\":\"I can not fly :C\"} Values not equal for entry: 'message', expected 'I can’t fly' but was 'I can not fly :C'",
  "statusTrace" : "com.consol.citrus.exceptions.TestCaseFailedException: Failed to validate JSON text:\r\n{\"message\":\"I can not fly :C\"} Values not equal for entry: 'message', expected 'I can’t fly' but was 'I can not fly :C'\r\n\tat com.consol.citrus.DefaultTestCase.executeAction(DefaultTestCase.java:143)\r\n\tat com.consol.citrus.DefaultTestCaseRunner.run(DefaultTestCaseRunner.java:125)\r\n\tat com.consol.citrus.TestActionRunner.$(TestActionRunner.java:35)\r\n\tat autotests.clients.DuckActionsClient.validateResponse(DuckActionsClient.java:132)\r\n\tat autotests.duckActionController.FlyDuck.FixedWingsFly(FlyDuck.java:63)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)\r\n\tat com.consol.citrus.testng.TestNGHelper.lambda$invokeTestMethod$1(TestNGHelper.java:82)\r\n\tat com.consol.citrus.common.DefaultTestLoader.lambda$doLoad$1(DefaultTestLoader.java:116)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1541)\r\n\tat com.consol.citrus.common.DefaultTestLoader.doLoad(DefaultTestLoader.java:116)\r\n\tat com.consol.citrus.common.DefaultTestLoader.load(DefaultTestLoader.java:94)\r\n\tat com.consol.citrus.testng.TestNGHelper.invokeTestMethod(TestNGHelper.java:83)\r\n\tat com.consol.citrus.testng.spring.TestNGCitrusSpringSupport.run(TestNGCitrusSpringSupport.java:185)\r\n\tat com.consol.citrus.testng.spring.TestNGCitrusSpringSupport.run(TestNGCitrusSpringSupport.java:101)\r\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:272)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:669)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)\r\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)\r\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)\r\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)\r\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1541)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:829)\r\n\tat org.testng.TestRunner.run(TestRunner.java:602)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:437)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:330)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1176)\r\n\tat org.testng.TestNG.runSuites(TestNG.java:1099)\r\n\tat org.testng.TestNG.run(TestNG.java:1067)\r\n\tat org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:153)\r\n\tat org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:96)\r\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\r\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\r\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\r\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)\r\n\tat com.sun.proxy.$Proxy2.stop(Unknown Source)\r\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)\r\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)\r\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)\r\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)\r\n\tat org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)\r\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:119)\r\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:66)\r\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)\r\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)\r\nCaused by: com.consol.citrus.exceptions.ValidationException: Failed to validate JSON text:\r\n{\"message\":\"I can not fly :C\"} Values not equal for entry: 'message', expected 'I can’t fly' but was 'I can not fly :C'\r\n\tat com.consol.citrus.validation.json.JsonTextMessageValidator.validateMessage(JsonTextMessageValidator.java:114)\r\n\tat com.consol.citrus.validation.json.JsonTextMessageValidator.validateMessage(JsonTextMessageValidator.java:58)\r\n\tat com.consol.citrus.validation.AbstractMessageValidator.validateMessage(AbstractMessageValidator.java:46)\r\n\tat com.consol.citrus.actions.ReceiveMessageAction.validateMessage(ReceiveMessageAction.java:279)\r\n\tat com.consol.citrus.actions.ReceiveMessageAction.doExecute(ReceiveMessageAction.java:168)\r\n\tat com.consol.citrus.actions.AbstractTestAction.execute(AbstractTestAction.java:59)\r\n\tat com.consol.citrus.DefaultTestCase.executeAction(DefaultTestCase.java:136)\r\n\t... 59 more\r\nCaused by: java.lang.IllegalArgumentException: Values not equal for entry: 'message', expected 'I can’t fly' but was 'I can not fly :C'\r\n\tat org.springframework.util.Assert.isTrue(Assert.java:121)\r\n\tat com.consol.citrus.validation.json.JsonTextMessageValidator.validateJson(JsonTextMessageValidator.java:211)\r\n\tat com.consol.citrus.validation.json.JsonTextMessageValidator.validateMessage(JsonTextMessageValidator.java:102)\r\n\t... 65 more\r\n",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "springTestContextBeforeTestClass",
    "time" : {
      "start" : 1738140840893,
      "stop" : 1738140840897,
      "duration" : 4
    },
    "description" : "",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0
  }, {
    "name" : "springTestContextPrepareTestInstance",
    "time" : {
      "start" : 1738140840898,
      "stop" : 1738140840899,
      "duration" : 1
    },
    "description" : "",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0
  }, {
    "name" : "before",
    "time" : {
      "start" : 1738140840900,
      "stop" : 1738140840900,
      "duration" : 0
    },
    "description" : "",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0
  }, {
    "name" : "springTestContextBeforeTestMethod",
    "time" : {
      "start" : 1738140842097,
      "stop" : 1738140842097,
      "duration" : 0
    },
    "description" : "",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0
  }, {
    "name" : "beforeSuite",
    "time" : {
      "start" : 1738140839088,
      "stop" : 1738140840843,
      "duration" : 1755
    },
    "description" : "",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "Failed to validate JSON text:\r\n{\"message\":\"I can not fly :C\"} Values not equal for entry: 'message', expected 'I can’t fly' but was 'I can not fly :C'",
    "statusTrace" : "com.consol.citrus.exceptions.TestCaseFailedException: Failed to validate JSON text:\r\n{\"message\":\"I can not fly :C\"} Values not equal for entry: 'message', expected 'I can’t fly' but was 'I can not fly :C'\r\n\tat com.consol.citrus.DefaultTestCase.executeAction(DefaultTestCase.java:143)\r\n\tat com.consol.citrus.DefaultTestCaseRunner.run(DefaultTestCaseRunner.java:125)\r\n\tat com.consol.citrus.TestActionRunner.$(TestActionRunner.java:35)\r\n\tat autotests.clients.DuckActionsClient.validateResponse(DuckActionsClient.java:132)\r\n\tat autotests.duckActionController.FlyDuck.FixedWingsFly(FlyDuck.java:63)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)\r\n\tat com.consol.citrus.testng.TestNGHelper.lambda$invokeTestMethod$1(TestNGHelper.java:82)\r\n\tat com.consol.citrus.common.DefaultTestLoader.lambda$doLoad$1(DefaultTestLoader.java:116)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1541)\r\n\tat com.consol.citrus.common.DefaultTestLoader.doLoad(DefaultTestLoader.java:116)\r\n\tat com.consol.citrus.common.DefaultTestLoader.load(DefaultTestLoader.java:94)\r\n\tat com.consol.citrus.testng.TestNGHelper.invokeTestMethod(TestNGHelper.java:83)\r\n\tat com.consol.citrus.testng.spring.TestNGCitrusSpringSupport.run(TestNGCitrusSpringSupport.java:185)\r\n\tat com.consol.citrus.testng.spring.TestNGCitrusSpringSupport.run(TestNGCitrusSpringSupport.java:101)\r\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:272)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:669)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)\r\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)\r\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)\r\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)\r\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1541)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:829)\r\n\tat org.testng.TestRunner.run(TestRunner.java:602)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:437)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:330)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1176)\r\n\tat org.testng.TestNG.runSuites(TestNG.java:1099)\r\n\tat org.testng.TestNG.run(TestNG.java:1067)\r\n\tat org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:153)\r\n\tat org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:96)\r\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\r\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\r\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\r\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)\r\n\tat com.sun.proxy.$Proxy2.stop(Unknown Source)\r\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)\r\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)\r\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)\r\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)\r\n\tat org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)\r\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:119)\r\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:66)\r\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)\r\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)\r\nCaused by: com.consol.citrus.exceptions.ValidationException: Failed to validate JSON text:\r\n{\"message\":\"I can not fly :C\"} Values not equal for entry: 'message', expected 'I can’t fly' but was 'I can not fly :C'\r\n\tat com.consol.citrus.validation.json.JsonTextMessageValidator.validateMessage(JsonTextMessageValidator.java:114)\r\n\tat com.consol.citrus.validation.json.JsonTextMessageValidator.validateMessage(JsonTextMessageValidator.java:58)\r\n\tat com.consol.citrus.validation.AbstractMessageValidator.validateMessage(AbstractMessageValidator.java:46)\r\n\tat com.consol.citrus.actions.ReceiveMessageAction.validateMessage(ReceiveMessageAction.java:279)\r\n\tat com.consol.citrus.actions.ReceiveMessageAction.doExecute(ReceiveMessageAction.java:168)\r\n\tat com.consol.citrus.actions.AbstractTestAction.execute(AbstractTestAction.java:59)\r\n\tat com.consol.citrus.DefaultTestCase.executeAction(DefaultTestCase.java:136)\r\n\t... 59 more\r\nCaused by: java.lang.IllegalArgumentException: Values not equal for entry: 'message', expected 'I can’t fly' but was 'I can not fly :C'\r\n\tat org.springframework.util.Assert.isTrue(Assert.java:121)\r\n\tat com.consol.citrus.validation.json.JsonTextMessageValidator.validateJson(JsonTextMessageValidator.java:211)\r\n\tat com.consol.citrus.validation.json.JsonTextMessageValidator.validateMessage(JsonTextMessageValidator.java:102)\r\n\t... 65 more\r\n",
    "steps" : [ {
      "name" : "Create duck endpoint",
      "time" : {
        "start" : 1738140842107,
        "stop" : 1738140842124,
        "duration" : 17
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "runner",
        "value" : "com.consol.citrus.DefaultTestCaseRunner@4d9cf71d"
      }, {
        "name" : "body",
        "value" : "autotests.payloads.createDuck.CreateDuckPayload@5c43cb12"
      } ],
      "hasContent" : true,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0
    }, {
      "name" : "Get duck id",
      "time" : {
        "start" : 1738140842124,
        "stop" : 1738140842132,
        "duration" : 8
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "runner",
        "value" : "com.consol.citrus.DefaultTestCaseRunner@4d9cf71d"
      } ],
      "hasContent" : true,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0
    }, {
      "name" : "Fly duck endpoint",
      "time" : {
        "start" : 1738140842132,
        "stop" : 1738140842154,
        "duration" : 22
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "runner",
        "value" : "com.consol.citrus.DefaultTestCaseRunner@4d9cf71d"
      }, {
        "name" : "id",
        "value" : "${duckId}"
      } ],
      "hasContent" : true,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0
    }, {
      "name" : "Duck validation using resource files",
      "time" : {
        "start" : 1738140842155,
        "stop" : 1738140842168,
        "duration" : 13
      },
      "status" : "broken",
      "statusMessage" : "Failed to validate JSON text:\r\n{\"message\":\"I can not fly :C\"} Values not equal for entry: 'message', expected 'I can’t fly' but was 'I can not fly :C'",
      "statusTrace" : "com.consol.citrus.exceptions.TestCaseFailedException: Failed to validate JSON text:\r\n{\"message\":\"I can not fly :C\"} Values not equal for entry: 'message', expected 'I can’t fly' but was 'I can not fly :C'\r\n\tat com.consol.citrus.DefaultTestCase.executeAction(DefaultTestCase.java:143)\r\n\tat com.consol.citrus.DefaultTestCaseRunner.run(DefaultTestCaseRunner.java:125)\r\n\tat com.consol.citrus.TestActionRunner.$(TestActionRunner.java:35)\r\n\tat autotests.clients.DuckActionsClient.validateResponse(DuckActionsClient.java:132)\r\n\tat autotests.duckActionController.FlyDuck.FixedWingsFly(FlyDuck.java:63)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)\r\n\tat com.consol.citrus.testng.TestNGHelper.lambda$invokeTestMethod$1(TestNGHelper.java:82)\r\n\tat com.consol.citrus.common.DefaultTestLoader.lambda$doLoad$1(DefaultTestLoader.java:116)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1541)\r\n\tat com.consol.citrus.common.DefaultTestLoader.doLoad(DefaultTestLoader.java:116)\r\n\tat com.consol.citrus.common.DefaultTestLoader.load(DefaultTestLoader.java:94)\r\n\tat com.consol.citrus.testng.TestNGHelper.invokeTestMethod(TestNGHelper.java:83)\r\n\tat com.consol.citrus.testng.spring.TestNGCitrusSpringSupport.run(TestNGCitrusSpringSupport.java:185)\r\n\tat com.consol.citrus.testng.spring.TestNGCitrusSpringSupport.run(TestNGCitrusSpringSupport.java:101)\r\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:272)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:669)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)\r\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)\r\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)\r\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)\r\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1541)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:829)\r\n\tat org.testng.TestRunner.run(TestRunner.java:602)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:437)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:330)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1176)\r\n\tat org.testng.TestNG.runSuites(TestNG.java:1099)\r\n\tat org.testng.TestNG.run(TestNG.java:1067)\r\n\tat org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:153)\r\n\tat org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:96)\r\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\r\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\r\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\r\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)\r\n\tat com.sun.proxy.$Proxy2.stop(Unknown Source)\r\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)\r\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)\r\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)\r\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)\r\n\tat org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)\r\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:119)\r\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:66)\r\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)\r\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)\r\nCaused by: com.consol.citrus.exceptions.ValidationException: Failed to validate JSON text:\r\n{\"message\":\"I can not fly :C\"} Values not equal for entry: 'message', expected 'I can’t fly' but was 'I can not fly :C'\r\n\tat com.consol.citrus.validation.json.JsonTextMessageValidator.validateMessage(JsonTextMessageValidator.java:114)\r\n\tat com.consol.citrus.validation.json.JsonTextMessageValidator.validateMessage(JsonTextMessageValidator.java:58)\r\n\tat com.consol.citrus.validation.AbstractMessageValidator.validateMessage(AbstractMessageValidator.java:46)\r\n\tat com.consol.citrus.actions.ReceiveMessageAction.validateMessage(ReceiveMessageAction.java:279)\r\n\tat com.consol.citrus.actions.ReceiveMessageAction.doExecute(ReceiveMessageAction.java:168)\r\n\tat com.consol.citrus.actions.AbstractTestAction.execute(AbstractTestAction.java:59)\r\n\tat com.consol.citrus.DefaultTestCase.executeAction(DefaultTestCase.java:136)\r\n\t... 59 more\r\nCaused by: java.lang.IllegalArgumentException: Values not equal for entry: 'message', expected 'I can’t fly' but was 'I can not fly :C'\r\n\tat org.springframework.util.Assert.isTrue(Assert.java:121)\r\n\tat com.consol.citrus.validation.json.JsonTextMessageValidator.validateJson(JsonTextMessageValidator.java:211)\r\n\tat com.consol.citrus.validation.json.JsonTextMessageValidator.validateMessage(JsonTextMessageValidator.java:102)\r\n\t... 65 more\r\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "runner",
        "value" : "com.consol.citrus.DefaultTestCaseRunner@4d9cf71d"
      }, {
        "name" : "expectedPayload",
        "value" : "duckActionController/flyDuck/fixedFlyDuck.json"
      }, {
        "name" : "status",
        "value" : "200 OK"
      } ],
      "hasContent" : true,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : true,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 4
  },
  "afterStages" : [ {
    "name" : "springTestContextAfterTestMethod",
    "time" : {
      "start" : 1738140842183,
      "stop" : 1738140842183,
      "duration" : 0
    },
    "description" : "",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0
  }, {
    "name" : "after",
    "time" : {
      "start" : 1738140842370,
      "stop" : 1738140842370,
      "duration" : 0
    },
    "description" : "",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0
  }, {
    "name" : "springTestContextAfterTestClass",
    "time" : {
      "start" : 1738140842371,
      "stop" : 1738140842373,
      "duration" : 2
    },
    "description" : "",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0
  }, {
    "name" : "afterSuite",
    "time" : {
      "start" : 1738140843587,
      "stop" : 1738140843669,
      "duration" : 82
    },
    "description" : "",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "package",
    "value" : "autotests.duckActionController.FlyDuck"
  }, {
    "name" : "testClass",
    "value" : "autotests.duckActionController.FlyDuck"
  }, {
    "name" : "testMethod",
    "value" : "FixedWingsFly"
  }, {
    "name" : "parentSuite",
    "value" : "Gradle suite"
  }, {
    "name" : "suite",
    "value" : "Gradle test"
  }, {
    "name" : "subSuite",
    "value" : "autotests.duckActionController.FlyDuck"
  }, {
    "name" : "host",
    "value" : "DESKTOP-AV9IB0O"
  }, {
    "name" : "thread",
    "value" : "2616@DESKTOP-AV9IB0O.Test worker(1)"
  }, {
    "name" : "framework",
    "value" : "testng"
  }, {
    "name" : "language",
    "value" : "java"
  }, {
    "name" : "epic",
    "value" : "duckActionController Tests"
  }, {
    "name" : "feature",
    "value" : "Endpoint /api/duck/action/fly"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "arg0",
    "value" : "null"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "b3e23956624895d4.json",
  "parameterValues" : [ "null" ]
}